name: Release Workflow

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # Job for testing and coverage report
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install playwright
        run: npx playwright install --with-deps

      - name: Run tests with coverage
        run: npm run test-coverage

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload Coverage Report
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # Job for releasing package on push to main with a git tag
  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
          createGithubReleases: true
          commit: "chore: version bump"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish on JSR 
        id: jsr-publish
        run: |
          # Extract the version from package.json
          VERSION=$(jq -r '.version' package.json)
          
          # Update jsr.json with the extracted version
          jq --arg version "$VERSION" '.version = $version' jsr.json > tmp.json && mv tmp.json jsr.json

          git add jsr.json
          git commit -m "chore: update jsr.json version to $VERSION" || echo "No changes to commit"
          npx jsr publish